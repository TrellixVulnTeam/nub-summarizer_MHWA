Welcome to the first lesson of computational investing. My assumption in terms of learning goals is that you want to be a portfolio manager. What is it you need to know, and what motivates you? It depends on what type of fund you manage and what your incentives are. Your motivation is probably compensation. And your compensation depends on the type of fund you manage and how well your fund performs. We talked already about some of the differences between Exchange Traded Funds, Mutual Funds, and Hedge Funds. And those differences that we talked about are primarily having to do with how they're traded and how visible, what their holding is to those who invest. Another very, very important sort of difference is how are the managers of these funds compensated? In other words, there's some sort of rule for each one that shows how the fund managers make money. And that's very, very important because the manner in which they're paid incentivizes them to trade or act in certain ways. So let's talk about each one of these individually. Before I get started, though, I have to introduce one concept here. It's called assets under management or AUM. And this is the buzz word that simply means how much money is being managed by the fund? It's important because for all of these part of the compensation is a percentage of the AUM. The managers of ETFs are compensated according to an expense ratio which is simply some percentage of AUM. Expenditure issues for ETFs are usually pretty low. ETFs usually are tied to an index. And most importantly, it includes this component relating to profits, that 20%. Now, one or two other things to clarify here. What I've been talking about is the way that the folks who manage these funds are compensated. Separately, if you are an investor in one of these funds, in other words you give your money to one of these types of funds to be managed, your return is based on how much the value of that fund increased and in most cases that increase is subject to what happens to the economy or what happens in the markets. Let's look at a more detailed example of this two and twenty structure. So besides knowing who your investors might be, it's critically important to know why they might invest in your fund.  So you might build a hedge fund who's goal is to beat the S&P 500 index as a benchmark because you're wise at selecting among all those, which stocks are going to outperform? And, of course, the over all index has the good stocks and the bad stocks, so you're going to do better because you picked the specific good ones. An important component of the benchmark model is that many benchmarks, like the stock market as a whole, for which S&P 500 is a good representative, go down. And it is of course natural that a portfolio consisted of stocks from this index might go down as well. So, even though both the index and the fund go down, you can outperform the index by going down less. So, this kind of fund that is tagged against a benchmark can still meet performance goals if it goes down. So long as that index is going down more. That brings us to absolute return funds. Their goal is to provide positive return no matter what. These funds are usually long/short, which means they make positive bets in stocks they think are going to go up. And they make negative bets in stocks are going to go down. We'll talk about shorting a little bit later. In any case there objective is to make slow gradual positive return no matter what. Often, these types of funds don't make the same percentage gains as the beat a benchmark fund, but they have very low draw downs. In other words, when the market takes a bit hit, they often don't. The next question is well, how do we measure how well that fund is meeting those goals? We talked about these metrics in the mini course manipulating financial data in Python, but we'll repeat it just a little bit here to remind you, and also to bring those folks up to speed who didn't necessarily have the previous course. Cumulative return is a measure of, given the funds I started with, how much more did I end up with after a certain amount of time? So suppose we have and in the array of values of our portfolio, where zero is the first value, and minus one is the very last one. We can easily compute cumulative return by dividing that last value by the first value and subtracting one. So for instance if we made 20% over a year this would end up being 0.2. Volatility is a measure of how rapidly and aggressively the portfolio goes up and down in value and of course lower volatility is better. Volatility is simply measured as the standard deviation of daily returns. Our last factor here which is a measure of the ratio of risk to reward is typically measure using sharp ratio, and the sharp ratio is calculated like this. Those orders get executed or not, and that updates the live portfolio. Now one reason this kind of trading algorithm is important is you don't want to execute everything at once. In other words, suppose we wanted to take a very, very large position in Apple. If we were just to send an order, hey, buy me 10 million shares of Apple, that would affect us detrimentally in the sense that the price for Apple would probably rise. And we would not get a good execution. So this training algorithm takes those sorts of things into consideration as it moves our live portfolio to be more close to the target portfolio. In fact, sometimes it takes days to enter a particular position. Some other considerations that go into Portfolio Optimizer are historical data, open, high, low, close, and volume. We can look at that historical data to inform how stocks are correlated or uncorrelated to one another, and also of critical importance is our current portfolio. It may be the case that if we're holding something, we don't want to exit it immediately because we'd be penalized by rapidly selling it. So this optimizer takes all this information into account to get to the target portfolio that our trading algorithm is working to drive us towards. Now one more stop along our road here at the computing infrastructure of a hedge fund is to look at how do we come up with this N-day forecast. By N, N might be five days or ten days or whatever. So here's this N-day forecast, and we've got some kind of forecasting algorithm. This is very often in the form of a model, in fact, a machine learning based model. And creating these sorts of forecasting algorithms using machine learning is the focus of the last mini-course in this group of mini-courses. Anyhow, how do we get to this forecast? Well, we've usually got some sort of proprietary information, again, historical data, and our forecaster crunches all that data to build a model and create a forecast. So, bringing it all together, that's the computing in a hedge fund. And we've also spent some time talking about what might motivate you as a hedge fund manager.