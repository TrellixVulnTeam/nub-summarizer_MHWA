Python allows you to quickly prototype algorithms while also providing computational speed. It has a number of features. Firstly, it has strong scientific libraries. Second, it is strongly maintained. It is also fast if you can stick to metrics notation because lower levels are returned in C. >> Some other potential languages that might have made sense for this course include R and MATLAB. Which are themselves also great languages for financial data. But we've chosen Python and we'll be using this book Python for Finance in the course. Look for readings assigned in the course outline. Our objective in this class is to get you up and running quickly, to show you some real data, and some code you can use to view it and manipulate it. And just give you a feeling that you know what's going on. So we're going to take you from examples of raw data all the way to visualization. Our objective for this lesson is to show you how to read in data like this, focus, say, on one column or another, and create a plot from that data. Okay, so now you've seen an example with weather. Let's start thinking about stocks. Which fields or items in a header row, would you expect to see in a comma separated value file of stock data? So here are the options. Number of employees for the company, date/time, company name, price of the stock, company's hometown. Good luck. The correct answers are date/time and price of the stock. Let me mention a couple of reasons why some of these others aren't correct answers. Sure, the company name is important to know, but it doesn't change over time, so there's no need to allocate space for this information every day over time. We provide for you in this class hundreds of CSV files that represent the prices of stocks over time. Here's an example from one of those files that you provided. This is data from the file HCP.csv. In other words, in the morning, when trading on the exchange began, that was the first price of the day for that stock. Adjusted Close is a number that the data provider generates for us. And it's adjusted, as the name implies, for certain things like stocks, splits, and dividend payments. Now, on the current day, So here's our dataframe fleshed out with a little bit of data. The reason you see those values here is, back in 2000, Google did not exist as a publicly traded company, and neither did the ETF GLD. Now these NaN values can cause problems, and we'll be talking about those in a later session. Now as I said, this might represent closing prices, but Pandas can also handle additional data in a sort of three dimensional sense. So you can have a dataframe that represents, again in columns, our particular symbols, and in rows, dates. This operation is called slicing and it is a very important operation in Python pandas, which you will encounter in the future lesson. 